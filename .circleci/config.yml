version: 2.0
jobs:
  build:
    docker:
      - image: ubuntu:20.04
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update
            DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt install -y \
              build-essential libbsd-dev libelf-dev libdw-dev binutils-dev \
              autoconf automake libtool pkg-config autoconf-archive \
              g++ ocaml ocamlbuild ocaml-findlib libnum-ocaml-dev \
              default-jdk-headless python3 \
              make git gawk gdb wget \
              libunwind-dev libc6-dev-i386 zlib1g-dev libc6-dbg \
              libboost-iostreams-dev libboost-regex-dev \
              libboost-serialization-dev libboost-filesystem-dev libffi-dev
      - run:
          name: Report OCaml version for debugging
          command: |
            dpkg -l | grep ocaml
      - checkout
      - run:
          name: Update submodules
          command: git submodule update --init --recursive
      - run:
          name: Build submodules
          command: make -C contrib -j 2
      - run:
          name: Build project
          command: |
            . contrib/env.sh
            ./autogen.sh
            ./configure
            make -j 2
      - run:
          name: Create liballocs metadata
          no_output_timeout: 25m
          command: |
            mkdir -p /usr/lib/meta && \
            make -f tools/Makefile.meta \
                $(for libname in `ldd /bin/true | sed -En '/[[:blank:]]*([^[:blank:]]* => )?(.*) \(0x[0-9a-f]+\)/ {s//\2/;p}' | egrep 'libc\.so\.6|ld-linux.*\.so' | xargs readlink -f`; do echo "/usr/lib/meta${libname}-meta.so"; done)
      - persist_to_workspace:
          root: /
          paths: root/project usr/lib/meta
  test:
    requires:
      - build
    docker:
      - image: ubuntu:20.04
    steps:
      - run:
          name: Install dependencies
          command: |
            apt update
            DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt install -y \
              ca-certificates make build-essential g++ autoconf automake libtool \
              libelf-dev python3 git gawk python3-distutils libunwind-dev \
              ocaml ocamlbuild ocaml-findlib \
              libdw-dev binutils-dev libffi-dev \
              libboost-iostreams-dev libboost-regex-dev \
              libboost-serialization-dev libboost-filesystem-dev
      - attach_workspace:
          at: /
      - run:
          name: Run tests
          command: make -C /root/project/tests -j 2 -k

workflows:
  version: 2
  default:
    jobs:
      - build
      - test:
          requires:
            - build
